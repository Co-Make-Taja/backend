package bw.lambdaschool.comake.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

@Entity
@Table(name = "issues")
public class Issue extends Auditable
{
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private long issueid;

    @Column(nullable = false)
    private String title;

    @Column(nullable = false, length = 10000)
    private String description;

    @Column
    private String image;


    /**
     * The categoryid of the category assigned to this issue is what is stored in the database.
     * This is the entire category object!
     * <p>
     * Forms a Many to One relationship between issues and categories.
     * A category can have many issues.
     */
    @ManyToOne
    @JoinColumn(name = "categoryid")
    @JsonIgnoreProperties(value = "issues", allowSetters = true)
    private Category category;

    @ManyToOne
    @JoinColumn(name = "userid")
    @JsonIgnoreProperties(value = "issues", allowSetters = true)
    private User user;

    @OneToMany(mappedBy = "issue", cascade = CascadeType.ALL,
            orphanRemoval = true)
    @JsonIgnoreProperties(value = "issue", allowSetters = true)
    @JsonIgnore
    private Set<Comment> comments = new HashSet<>();

    @Column(nullable = true)
    private int upvote;

    /**
     * The default controller is required by JPA
     */
    public Issue()
    {
    }

    /**
     * Given the params, create a new issue object
     * <p>
     * issueid is autogenerated
     *
     * @param title The title (String) of the issue
     * @param description The description (String) of the issue
     * @param image the imageURL (String) of the issue
     * @param category the category (String) of the issue
     */
    public Issue(String title, String description, String image, Category category, User user)
    {
        this.title = title;
        this.description = description;
        this.image = image;
        this.category = category;
        this.user = user;
    }

    public long getIssueid() {
        return issueid;
    }

    public void setIssueid(long issueid) {
        this.issueid = issueid;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getImage() {
        return image;
    }

    public void setImage(String image) {
        this.image = image;
    }

    public Category getCategory() {
        return category;
    }

    public void setCategory(Category category) {
        this.category = category;
    }

    public User getUser() {
        return user;
    }

    public void setUser(User user) {
        this.user = user;
    }

    public Set<Comment> getComments() {
        return comments;
    }

    public void setComments(Set<Comment> comments) {
        this.comments = comments;
    }

    public int getUpvote()
    {
        return upvote;
    }

    public void setUpvote(int upvote)
    {
        this.upvote = upvote;
    }
}
